[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "document-issue-io"
description = ''
readme = "README.md"
dynamic = ["version"]
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [{ name = "J Gunstone", email = "j.gunstone@maxfordham.com" }]
classifiers = [ # https://pypi.org/classifiers/
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "pillow",
    "pydantic",
    "jinja2",
    "reportlab",
    "pypdf",
    "frictionless>5",
    "frictionless[json]",
    "quarto",
    # "r-tinytex", # NOTE. not available on pip... https://prefix.dev/channels/conda-forge/packages/r-tinytex
    # document-issue # TODO: How do we get this to install?
]

[project.optional-dependencies]
dev = ["pytest", "polyfactory", "hatch", "quarto"]
quarto = ["quarto"] # TODO: delele this...

[project.urls]
Documentation = "https://github.com/maxfordham/document-issue/packages/document-issue-io#readme"
Issues = "https://github.com/maxfordham/document-issue/issues"
Source = "https://github.com/maxfordham/document-issue/packages/document-issue-io"

[tool.hatch.version]
source = "vcs"
raw-options = { root = "../.." }

[tool.hatch.envs.default]
dependencies = ["pytest", "pytest-cov"]
[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/document_issue_io --cov=tests {args}"
no-cov = "cov --no-cov {args}"

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310", "311"]

[tool.coverage.run]
branch = true
parallel = true
omit = ["src/document_issue_io/__about__.py"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.hatch.build.hooks.custom]

[tool.hatch.metadata]
allow-direct-references = true

# [tool.hatch.build.targets.sdist]
# include = [
#   "/src",
#   "/tests",
# ]
