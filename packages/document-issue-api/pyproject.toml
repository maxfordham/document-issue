# [project]
# name = "document-issue"
# description = "jk"
# readme = "README.md"
# requires-python = ">=3.7"
# keywords = ["aec"]
# authors = [{ name = "J Gunstone", email = "j.gunstone@maxfordham.com" }]
# classifiers = [
#     "Development Status :: 4 - Beta",
#     "Programming Language :: Python",
#     "Programming Language :: Python :: 3.7",
#     "Programming Language :: Python :: 3.8",
#     "Programming Language :: Python :: 3.9",
#     "Programming Language :: Python :: 3.10",
#     "Programming Language :: Python :: 3.11",
#     "Programming Language :: Python :: Implementation :: CPython",
#     "Programming Language :: Python :: Implementation :: PyPy",
# ]
# license = "MIT"
# dependencies = [
#     "pydantic",
#     "Jinja2",
#     "stringcase",
#     "PyYAML",
#     "Pillow",
#     "pandas",
#     "tabulate",
#     "pandoc",
#     "pandoc-docx-pagebreak",
#     "python-dotenv",
# ]
# [tool.pytest.ini_options]
# pythonpath = "src"
# testpaths = ["tests"]
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "document-issue-api"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = []
authors = [
  { name = "U.N. Owen", email = "void@some.where" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "fastapi",
    "pydantic",
    "sqlalchemy",
    "httpx",
    "Jinja2",
    "stringcase",
    "PyYAML",
    "Pillow",
    "pandas",
    "tabulate",
    "pandoc",
    "pandoc-docx-pagebreak",
    "python-dotenv",
]

[project.urls]
Documentation = "https://github.com/unknown/document-issue-api#readme"
Issues = "https://github.com/unknown/document-issue-api/issues"
Source = "https://github.com/unknown/document-issue-api"

[tool.hatch.version]
path = "src/document_issue_api/__about__.py"

# [tool.hatch.envs.default]
# dependencies = [
#   "coverage[toml]>=6.5",
#   "pytest",
# ]
# [tool.hatch.envs.default.scripts]
# test = "pytest {args:tests}"
# test-cov = "coverage run -m pytest {args:tests}"
# cov-report = [
#   "- coverage combine",
#   "coverage report",
# ]
# cov = [
#   "test-cov",
#   "cov-report",
# ]

# [[tool.hatch.envs.all.matrix]]
# python = ["3.7", "3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/document_issue_api tests}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py37"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py37"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["document_issue_api"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

# [tool.coverage.run]
# source_pkgs = ["document_issue_api", "tests"]
# branch = true
# parallel = true
# omit = [
#   "src/document_issue_api/__about__.py",
# ]

# [tool.coverage.paths]
# document_issue_api = ["src/document_issue_api", "*/document-issue-api/src/document_issue_api"]
# tests = ["tests", "*/document-issue-api/tests"]

# [tool.coverage.report]
# exclude_lines = [
#   "no cov",
#   "if __name__ == .__main__.:",
#   "if TYPE_CHECKING:",
# ]
